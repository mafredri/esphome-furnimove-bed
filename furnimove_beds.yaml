substitutions:
  name: esp32-bedroom-bed
  friendly_name: Bedroom Bed
esphome:
  name: ${name}
  name_add_mac_suffix: false
  friendly_name: ${friendly_name}
api:
  encryption:
    key: !secret bedroom_bed_api_encryption_key
wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
logger:

sensor:
  - platform: uptime
    name: Uptime
  - platform: wifi_signal
    name: Wi-Fi Signal

text_sensor:
  - platform: version
    name: ESPHome Version

button:
  - platform: restart
    name: Restart

packages:
  esphome.bluetooth-proxy: github://esphome/bluetooth-proxies/esp32-generic/esp32-generic-c3.yaml@main
  left_bed: !include
    file: furnimove_bed_device.yaml
    vars:
      device_name: Left
      device_id_prefix: left
      device_mac: 00:00:00:00:00:00
  right_bed: !include
    file: furnimove_bed_device.yaml
    vars:
      device_name: Right
      device_id_prefix: right
      device_mac: AA:AA:AA:AA:AA:AA

esp32_ble_tracker:
  # Optional debugging.
  on_ble_advertise:
    - mac_address:
        - 00:00:00:00:00:00
        - AA:AA:AA:AA:AA:AA
      then:
        - lambda: |-
            ESP_LOGD("ble_adv", "New BLE device");
            ESP_LOGD("ble_adv", "  address: %s", x.address_str().c_str());
            ESP_LOGD("ble_adv", "  name: %s", x.get_name().c_str());
            ESP_LOGD("ble_adv", "  Advertised service UUIDs:");
            for (auto uuid : x.get_service_uuids()) {
                ESP_LOGD("ble_adv", "    - %s", uuid.to_string().c_str());
            }
